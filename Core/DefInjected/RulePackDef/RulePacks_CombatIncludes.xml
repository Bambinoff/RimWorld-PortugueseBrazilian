<?xml version="1.0" encoding="UTF-8"?>
<LanguageData>
  
  <!-- EN:
    <li>scraped_present->glancing</li>
    <li>scraped_present->bouncing</li>
    <li>scraped_present->grazing</li>
    <li>scraped_present->caroming</li>
    <li>scraped_present->skipping</li>
    <li>scraped_present->skating</li>
    <li>scraped_past->glanced</li>
    <li>scraped_past->bounced</li>
    <li>scraped_past->grazed</li>
    <li>scraped_past->caromed</li>
    <li>scraped_past->skipped</li>
    <li>scraped_past->skated</li>
  -->
  <Combat_DeflectIncludes.rulePack.rulesStrings>
    <li>scraped_present->dando uma olhada</li>
    <li>scraped_present->saltando</li>
    <li>scraped_present->pastando</li>
    <li>scraped_present->carambolando</li>
    <li>scraped_present->pulando</li>
    <li>scraped_present->patinando</li>
    <li>scraped_past->deu uma olhada</li>
    <li>scraped_past->saltou</li>
    <li>scraped_past->pastou</li>
    <li>scraped_past->carambolou</li>
    <li>scraped_past->pulou</li>
    <li>scraped_past->patinou</li>
  </Combat_DeflectIncludes.rulePack.rulesStrings>
  
  <!-- EN: action->[INITIATOR_definite] [tried] to [damaged_inf] [RECIPIENT_definite] -->
  <Combat_FailIncludes.rulePack.rulesStrings.0>action->[INITIATOR_definite] [tried] [damaged_inf] [RECIPIENT_definite]</Combat_FailIncludes.rulePack.rulesStrings.0>
  <!-- EN: action->[INITIATOR_definite] [tried] to [damaged_inf] [RECIPIENT_definite] with [implement] -->
  <Combat_FailIncludes.rulePack.rulesStrings.1>action->[INITIATOR_definite] [tried] [damaged_inf] [RECIPIENT_definite] com [implement]</Combat_FailIncludes.rulePack.rulesStrings.1>
  <!-- EN: action->[INITIATOR_definite] [tried] to use [implement] to [damaged_inf] [RECIPIENT_definite] -->
  <Combat_FailIncludes.rulePack.rulesStrings.2>action->[INITIATOR_definite] [tried] [damaged_inf] [RECIPIENT_definite] com [implement]</Combat_FailIncludes.rulePack.rulesStrings.2>
  <!-- EN: action->[INITIATOR_definite] swung [INITIATOR_possessive] [WEAPON_label] at [RECIPIENT_definite] -->
  <Combat_FailIncludes.rulePack.rulesStrings.3>action->[INITIATOR_definite] tentou bater seu(ua) [WEAPON_label] em [RECIPIENT_definite]</Combat_FailIncludes.rulePack.rulesStrings.3>
  <!-- EN: action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite] with [implement] -->
  <Combat_FailIncludes.rulePack.rulesStrings.4>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite] com [implement]</Combat_FailIncludes.rulePack.rulesStrings.4>
  <!-- EN: action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite] -->
  <Combat_FailIncludes.rulePack.rulesStrings.5>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite]</Combat_FailIncludes.rulePack.rulesStrings.5>
  <!-- EN: action(p=0.3)->[INITIATOR_definite] [verb_genericattack] with [implement] -->
  <Combat_FailIncludes.rulePack.rulesStrings.6>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] com [implement]</Combat_FailIncludes.rulePack.rulesStrings.6>
  <!-- EN: towardsat->towards -->
  <Combat_FailIncludes.rulePack.rulesStrings.7>towardsat->em</Combat_FailIncludes.rulePack.rulesStrings.7>
  <!-- EN: towardsat->at -->
  <Combat_FailIncludes.rulePack.rulesStrings.8>towardsat->em</Combat_FailIncludes.rulePack.rulesStrings.8>
  <!-- EN: verb_genericattack->swung -->
  <Combat_FailIncludes.rulePack.rulesStrings.9>verb_genericattack->tentou bater</Combat_FailIncludes.rulePack.rulesStrings.9>
  <!-- EN: verb_genericattack->flailed -->
  <Combat_FailIncludes.rulePack.rulesStrings.10>verb_genericattack->tentou bater</Combat_FailIncludes.rulePack.rulesStrings.10>
  <!-- EN: verb_genericattack->thrashed -->
  <Combat_FailIncludes.rulePack.rulesStrings.11>verb_genericattack->tentou bater</Combat_FailIncludes.rulePack.rulesStrings.11>
  <!-- EN: tried->tried -->
  <Combat_FailIncludes.rulePack.rulesStrings.12>tried->tentou</Combat_FailIncludes.rulePack.rulesStrings.12>
  <!-- EN: tried->attempted -->
  <Combat_FailIncludes.rulePack.rulesStrings.13>tried->tentou</Combat_FailIncludes.rulePack.rulesStrings.13>
  
  <!-- EN: result(p=1)->[damaged_present] [RECIPIENT_possessive] [targetlist] -->
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.0>result(p=0.5)->[damaged_present] [RECIPIENT_possessive] [targetlist]</Combat_MeleeDamageIncludes.rulePack.rulesStrings.0>
  <!-- EN: result(p=0.2)->[damaged_present] [RECIPIENT_possessive] [targetlist] and [flavortext_consequence] -->
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.1>result(p=0.1)->[damaged_present] [RECIPIENT_possessive] [targetlist], [adverb_flavortext]</Combat_MeleeDamageIncludes.rulePack.rulesStrings.1>
  <!-- EN: result(p=0.1)->[damaged_present] [RECIPIENT_possessive] [targetlist] [strikeAdv] -->
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.2>result(p=0.1)->[damaged_present] [RECIPIENT_possessive] [targetlist], [flavortext_situation]</Combat_MeleeDamageIncludes.rulePack.rulesStrings.2>
  <!-- EN: strikeAdv->painfully -->
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.3>result(p=0.1)->[damaged_present] [RECIPIENT_possessive] [targetlist], [flavortext_consequence]</Combat_MeleeDamageIncludes.rulePack.rulesStrings.3>
  <!-- EN: strikeAdv->horribly -->
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.4>adverb_flavortext->penosamente</Combat_MeleeDamageIncludes.rulePack.rulesStrings.4>
  <!-- EN: strikeAdv->savagely -->
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.5>adverb_flavortext->brutalmente</Combat_MeleeDamageIncludes.rulePack.rulesStrings.5>
  <!-- EN: strikeAdv->viciously -->
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.6>adverb_flavortext->horrivelmente</Combat_MeleeDamageIncludes.rulePack.rulesStrings.6>
  <!-- EN: flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a disgusting wound -->
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.7>adverb_flavortext->agonizantemente</Combat_MeleeDamageIncludes.rulePack.rulesStrings.7>
  <!-- EN: flavortext_consequence->leaving a horrific wound -->
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.8>adverb_flavortext->ferozmente</Combat_MeleeDamageIncludes.rulePack.rulesStrings.8>
  <!-- EN: flavortext_consequence(recipient_flesh!=Mechanoid)->making [RECIPIENT_objective] [wince] [painevent] -->
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.9>adverb_flavortext->cruelmente</Combat_MeleeDamageIncludes.rulePack.rulesStrings.9>
  <!-- EN: flavortext_consequence(p=0.2)->throwing [RECIPIENT_objective] off balance -->
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings.10>adverb_flavortext->barbaramente</Combat_MeleeDamageIncludes.rulePack.rulesStrings.10>
  
  <!-- EN: r_logentry->[action], [result]. -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.0>r_logentry->[action], [result].</Combat_MeleeIncludes.rulePack.rulesStrings.0>
  <!-- EN: implement(IMPLEMENTOWNER_type==weapon,p=2)->[INITIATOR_possessive] [WEAPON_label]'s [TOOL_label] -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.1>r_logentry(p=0.2)->[action].</Combat_MeleeIncludes.rulePack.rulesStrings.1>
  <!-- EN: implement(IMPLEMENTOWNER_type==weapon,p=1)->[INITIATOR_possessive] [WEAPON_label] -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.2>implement(IMPLEMENTOWNER_type==weapon,p=2)->seu(ua) [TOOL_label] do(a) [WEAPON_label]</Combat_MeleeIncludes.rulePack.rulesStrings.2>
  <!-- EN: implement(IMPLEMENTOWNER_type==weapon,p=1)->a [WEAPON_label]'s [TOOL_label] -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.3>implement(IMPLEMENTOWNER_type==weapon,p=1)->seu(ua) [WEAPON_label]</Combat_MeleeIncludes.rulePack.rulesStrings.3>
  <!-- EN: implement(IMPLEMENTOWNER_type==weapon,p=0.5)->a [WEAPON_label] -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.4>implement(IMPLEMENTOWNER_type==weapon,p=1)->seu(ua) [TOOL_label] do(a) [WEAPON_label]</Combat_MeleeIncludes.rulePack.rulesStrings.4>
  <!-- EN: implement(IMPLEMENTOWNER_type==bodypart,p=2)->[INITIATOR_possessive] [TOOL_label] -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.5>implement(IMPLEMENTOWNER_type==weapon,p=0.5)->seu(ua) [WEAPON_label]</Combat_MeleeIncludes.rulePack.rulesStrings.5>
  <!-- EN: implement(IMPLEMENTOWNER_type==hediff,p=2)->[INITIATOR_possessive] [WEAPON_label]'s [TOOL_label] -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.6>implement(IMPLEMENTOWNER_type==bodypart,p=2)->seu(ua) [TOOL_label]</Combat_MeleeIncludes.rulePack.rulesStrings.6>
  <!-- EN: implement(IMPLEMENTOWNER_type==hediff,p=1)->[INITIATOR_possessive] [WEAPON_label] -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.7>implement(IMPLEMENTOWNER_type==bodypart,p=1)->seu [adjective_bodypart] [TOOL_label]</Combat_MeleeIncludes.rulePack.rulesStrings.7>
  <!-- EN: implement(IMPLEMENTOWNER_type==hediff,p=1)->[INITIATOR_possessive] [TOOL_label] -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.8>implement(IMPLEMENTOWNER_type==hediff,p=2)->seu(ua) [TOOL_label] do(a) [WEAPON_label]</Combat_MeleeIncludes.rulePack.rulesStrings.8>
  <!-- EN: targetlist(recipient_part_count==1)->[recipient_part0_label] -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.9>implement(IMPLEMENTOWNER_type==hediff,p=1)->seu(ua) [WEAPON_label]</Combat_MeleeIncludes.rulePack.rulesStrings.9>
  <!-- EN: targetlist(recipient_part_count==2)->[recipient_part0_label] and [recipient_part1_label] -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.10>implement(IMPLEMENTOWNER_type==hediff,p=1)->seu(ua) [TOOL_label]</Combat_MeleeIncludes.rulePack.rulesStrings.10>
  <!-- EN: targetlist(recipient_part_count==3)->[recipient_part0_label], [recipient_part1_label], and [recipient_part2_label] -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.11>adjective_bodypart->forte</Combat_MeleeIncludes.rulePack.rulesStrings.11>
  <!-- EN: targetlist->[recipient_part0_label], [recipient_part1_label], [recipient_part2_label], and [recipient_part3_label] -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.12>adjective_bodypart->forte</Combat_MeleeIncludes.rulePack.rulesStrings.12>
  <!-- EN: damaged_present(deflected!=True)->wounding -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.13>adjective_bodypart->forte</Combat_MeleeIncludes.rulePack.rulesStrings.13>
  <!-- EN: damaged_present(deflected!=True)->injuring -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.14>adjective_bodypart->forte</Combat_MeleeIncludes.rulePack.rulesStrings.14>
  <!-- EN: destroyed(p=0.5)->destroyed -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.15>adjective_bodypart->resistente</Combat_MeleeIncludes.rulePack.rulesStrings.15>
  <!-- EN: destroyed(p=0.5)->demolished -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.16>adjective_bodypart->resistente</Combat_MeleeIncludes.rulePack.rulesStrings.16>
  <!-- EN: destroyed(p=0.5)->ruined -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.17>adjective_bodypart->firme</Combat_MeleeIncludes.rulePack.rulesStrings.17>
  <!-- EN: destroyed(p=0.5)->wrecked -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.18>adjective_bodypart->firme</Combat_MeleeIncludes.rulePack.rulesStrings.18>
  <!-- EN: wince(recipient_flesh==Normal)->wince -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.19>adjective_bodypart->resistente</Combat_MeleeIncludes.rulePack.rulesStrings.19>
  <!-- EN: wince(recipient_flesh==Normal)->grimace -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.20>adjective_bodypart->resistente</Combat_MeleeIncludes.rulePack.rulesStrings.20>
  <!-- EN: wince(recipient_flesh==Normal)->cringe -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.21>adjective_bodypart(initiator_flesh==True)->firme</Combat_MeleeIncludes.rulePack.rulesStrings.21>
  <!-- EN: wince(recipient_flesh==Normal)->groan -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.22>adjective_bodypart->firme</Combat_MeleeIncludes.rulePack.rulesStrings.22>
  <!-- EN: wince(recipient_flesh!=Mechanoid)->scream -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.23>targetlist(recipient_part_count==1)->[RECIPIENT_part0_label]</Combat_MeleeIncludes.rulePack.rulesStrings.23>
  <!-- EN: wince(recipient_flesh!=Mechanoid)->shout -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.24>targetlist(recipient_part_count==2)->[RECIPIENT_part0_label] e [RECIPIENT_part1_label]</Combat_MeleeIncludes.rulePack.rulesStrings.24>
  <!-- EN: wince->recoil -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.25>targetlist(recipient_part_count==3)->[RECIPIENT_part0_label], [RECIPIENT_part1_label], e [RECIPIENT_part2_label]</Combat_MeleeIncludes.rulePack.rulesStrings.25>
  <!-- EN: wince->stumble -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.26>targetlist->[RECIPIENT_part0_label], [RECIPIENT_part1_label], [RECIPIENT_part2_label], e [RECIPIENT_part3_label]</Combat_MeleeIncludes.rulePack.rulesStrings.26>
  <!-- EN: painstate->in -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.27>damaged_present(deflected!=True)->ferindo</Combat_MeleeIncludes.rulePack.rulesStrings.27>
  <!-- EN: painstate->with -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.28>damaged_present(deflected!=True)->prejudicando</Combat_MeleeIncludes.rulePack.rulesStrings.28>
  <!-- EN: painstate->from the -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.29>destroyed(p=0.5)->destruido</Combat_MeleeIncludes.rulePack.rulesStrings.29>
  <!-- EN: painevent(recipient_flesh!=Mechanoid)->[painstate] pain -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.30>destroyed(p=0.5)->demolido</Combat_MeleeIncludes.rulePack.rulesStrings.30>
  <!-- EN: painevent(recipient_flesh!=Mechanoid)->[painstate] agony -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.31>destroyed(p=0.5)->arruinado</Combat_MeleeIncludes.rulePack.rulesStrings.31>
  <!-- EN: painevent(recipient_flesh==Normal)->with misery -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.32>destroyed(p=0.5)->devastado</Combat_MeleeIncludes.rulePack.rulesStrings.32>
  <!-- EN: painevent->from the injury -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.33>wince(recipient_flesh==Normal)->estremecer</Combat_MeleeIncludes.rulePack.rulesStrings.33>
  <!-- EN: painevent->from the wound -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.34>wince(recipient_flesh==Normal)->encolher</Combat_MeleeIncludes.rulePack.rulesStrings.34>
  <!-- EN: to->to -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.35>wince(recipient_flesh==Normal)->encolher</Combat_MeleeIncludes.rulePack.rulesStrings.35>
  <!-- EN: to->into -->
  <Combat_MeleeIncludes.rulePack.rulesStrings.36>wince(recipient_flesh==Normal)->gemer</Combat_MeleeIncludes.rulePack.rulesStrings.36>
  
  <!-- EN:
    <li>skillDescMelee->[wielding] [INITIATOR_possessive] [WEAPON_label] [skillAdv]</li>
    <li>skillDescMelee->[using] [implement] [skillAdv]</li>
    <li>wielding(p=4)->wielding</li>
    <li>wielding(p=3)->using</li>
    <li>wielding(p=2)->handling</li>
    <li>wielding->brandishing</li>
    <li>wielding->manipulating</li>
    <li>using(p=4)->using</li>
    <li>using->driving</li>
    <li>using->thrusting</li>
    <li>using->utilizing</li>
    <li>using->moving</li>
    <li>skillAdv(INITIATOR_skill<=3)->incompetently</li>
    <li>skillAdv(INITIATOR_skill<=3)->ineptly</li>
    <li>skillAdv(INITIATOR_skill<=3)->wildly</li>
    <li>skillAdv(INITIATOR_skill<=3)->randomly</li>
    <li>skillAdv(INITIATOR_skill<=3)->flailingly</li>
    <li>skillAdv(INITIATOR_skill<=4)->awkwardly</li>
    <li>skillAdv(INITIATOR_skill<=4)->clumsily</li>
    <li>skillAdv(INITIATOR_skill<=5)->fearfully</li>
    <li>skillAdv(INITIATOR_skill<=5)->falteringly</li>
    <li>skillAdv(INITIATOR_skill<=5)->foolishly</li>
    <li>skillAdv(INITIATOR_skill<=6)->hesitantly</li>
    <li>skillAdv(INITIATOR_skill<=6)->reluctantly</li>
    <li>skillAdv(INITIATOR_skill<=6)->slowly</li>
    <li>skillAdv(INITIATOR_skill<=6)->tentatively</li>
    <li>skillAdv(INITIATOR_skill<=6)->inexpertly</li>
    <li>skillAdv(INITIATOR_skill<=6)->amateurishly</li>
    <li>skillAdv(INITIATOR_skill<=6)->timidly</li>
    <li>skillAdv(INITIATOR_skill<=8)->enthusiastically</li>
    <li>skillAdv(INITIATOR_skill>=6,INITIATOR_skill<=10)->proficiently</li>
    <li>skillAdv(INITIATOR_skill>=6,INITIATOR_skill<=10)->competently</li>
    <li>skillAdv(INITIATOR_skill>=8)->professionally</li>
    <li>skillAdv(INITIATOR_skill>=8)->deftly</li>
    <li>skillAdv(INITIATOR_skill>=8)->aptly</li>
    <li>skillAdv(INITIATOR_skill>=8)->cleverly</li>
    <li>skillAdv(INITIATOR_skill>=8)->dexterously</li>
    <li>skillAdv(INITIATOR_skill>=8)->skillfully</li>
    <li>skillAdv(INITIATOR_skill>=10)->adeptly</li>
    <li>skillAdv(INITIATOR_skill>=10)->slickly</li>
    <li>skillAdv(INITIATOR_skill>=12)->expertly</li>
    <li>skillAdv(INITIATOR_skill>=12)->precisely</li>
    <li>skillAdv(INITIATOR_skill>=14)->masterfully</li>
    <li>skillAdv(INITIATOR_skill>=16)->artistically</li>
    <li>skillAdv(INITIATOR_skill>=16)->gracefully</li>
    <li>skillAdv(initiator_flesh==Mechanoid)->mechanically</li>
    <li>skillAdv(initiator_flesh==Mechanoid)->robotically</li>
    <li>skillAdv(initiator_flesh==Mechanoid)->directly</li>
  -->
  <Combat_SkillIncludes.rulePack.rulesStrings>TODO</Combat_SkillIncludes.rulePack.rulesStrings>
  
  <!-- EN: destroyed_targets(recipient_part_destroyed_count==1)->[recipient_part_destroyed0_label] -->
  <Combat_WoundIncludes.rulePack.rulesStrings.0>destroyed_targets(recipient_part_destroyed_count==1)->[RECIPIENT_part_destroyed0_label]</Combat_WoundIncludes.rulePack.rulesStrings.0>
  <!-- EN: destroyed_targets(recipient_part_destroyed_count==2)->[recipient_part_destroyed0_label] and [recipient_part_destroyed1_label] -->
  <Combat_WoundIncludes.rulePack.rulesStrings.1>destroyed_targets(recipient_part_destroyed_count==2)->[RECIPIENT_part_destroyed0_label] e [RECIPIENT_part_destroyed1_label]</Combat_WoundIncludes.rulePack.rulesStrings.1>
  <!-- EN: destroyed_targets(recipient_part_destroyed_count==3)->[recipient_part_destroyed0_label], [recipient_part_destroyed1_label], and [recipient_part_destroyed2_label] -->
  <Combat_WoundIncludes.rulePack.rulesStrings.2>destroyed_targets(recipient_part_destroyed_count==3)->[RECIPIENT_part_destroyed0_label], [RECIPIENT_part_destroyed1_label], e [RECIPIENT_part_destroyed2_label]</Combat_WoundIncludes.rulePack.rulesStrings.2>
  <!-- EN: destroyed_targets->[recipient_part_destroyed0_label], [recipient_part_destroyed1_label], [recipient_part_destroyed2_label], and [recipient_part_destroyed3_label] -->
  <Combat_WoundIncludes.rulePack.rulesStrings.3>destroyed_targets->[RECIPIENT_part_destroyed0_label], [RECIPIENT_part_destroyed1_label], [RECIPIENT_part_destroyed2_label], e [RECIPIENT_part_destroyed3_label]</Combat_WoundIncludes.rulePack.rulesStrings.3>
  <!-- EN: damaged_targets(recipient_part_damaged_count==1)->[recipient_part_damaged0_label] -->
  <Combat_WoundIncludes.rulePack.rulesStrings.4>damaged_targets(recipient_part_damaged_count==1)->[RECIPIENT_part_damaged0_label]</Combat_WoundIncludes.rulePack.rulesStrings.4>
  <!-- EN: damaged_targets(recipient_part_damaged_count==2)->[recipient_part_damaged0_label] and [recipient_part_damaged1_label] -->
  <Combat_WoundIncludes.rulePack.rulesStrings.5>damaged_targets(recipient_part_damaged_count==2)->[RECIPIENT_part_damaged0_label] e [RECIPIENT_part_damaged1_label]</Combat_WoundIncludes.rulePack.rulesStrings.5>
  <!-- EN: damaged_targets(recipient_part_damaged_count==3)->[recipient_part_damaged0_label], [recipient_part_damaged1_label], and [recipient_part_damaged2_label] -->
  <Combat_WoundIncludes.rulePack.rulesStrings.6>damaged_targets(recipient_part_damaged_count==3)->[RECIPIENT_part_damaged0_label], [RECIPIENT_part_damaged1_label], e [RECIPIENT_part_damaged2_label]</Combat_WoundIncludes.rulePack.rulesStrings.6>
  <!-- EN: damaged_targets->[recipient_part_damaged0_label], [recipient_part_damaged1_label], [recipient_part_damaged2_label], and [recipient_part_damaged3_label] -->
  <Combat_WoundIncludes.rulePack.rulesStrings.7>damaged_targets->[RECIPIENT_part_damaged0_label], [RECIPIENT_part_damaged1_label], [RECIPIENT_part_damaged2_label], e [RECIPIENT_part_damaged3_label]</Combat_WoundIncludes.rulePack.rulesStrings.7>
  
</LanguageData>